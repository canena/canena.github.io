<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>A blog about life</title>
        <link>http://canena.de/posts</link>
        <description>Life/Music/Art/Code/Stuff</description>
        <lastBuildDate>Sun, 09 Jun 2019 14:41:56 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Elmstatic</generator>
        <language>en</language>
        <image>
            <title>A blog about life</title>
            <url>http://canena.de/img/canena.png</url>
            <link>http://canena.de/posts</link>
        </image>
        <copyright>© 2019 CANENA - All rights reserved</copyright>
        <item>
            <title><![CDATA[Making a habit of making a habit]]></title>
            <link>http://canena.de/posts/2015-08-04-making-a-habit-of-making-a-habit</link>
            <guid>http://canena.de/posts/2015-08-04-making-a-habit-of-making-a-habit</guid>
            <pubDate>Tue, 04 Aug 2015 00:00:00 GMT</pubDate>
            <description><![CDATA[
Making a habit of making a habit

Lately I’ve been thinking a lot about writing and whether I could do it myself. “Yes, I could do it if I really wanted” is what I’d tell the spectre in the mirror. I just always had the nagging feeling that I didn’t care enough so the outcome surely wouldn’t be worth the digital ink. I’d be jealous of the interesting stuff people have to say and the sense of style that would let me almost inhale their stories at times. Why is it that I couldn’t start something?...]]></description>
        </item>
        <item>
            <title><![CDATA[Hello Living Styleguide]]></title>
            <link>http://canena.de/posts/2017-01-18-hello-living-style-guide</link>
            <guid>http://canena.de/posts/2017-01-18-hello-living-style-guide</guid>
            <pubDate>Wed, 18 Jan 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[Note that this styleguide has been moved over from an older version of the blog so this approach does not necessarily represent the way the markup is structured anymore. It shows, however, that embedding alternative styles into an existing page is a breeze when employing BEM blocks. The old styles literally live side-by-side with the new ones and the mild namespacing via ui-theme allows for selective theming on a per-subtree-basis.

This is the living documentation for my own little set of respo...]]></description>
        </item>
        <item>
            <title><![CDATA[Epic Links]]></title>
            <link>http://canena.de/posts/2017-03-20-epic-links</link>
            <guid>http://canena.de/posts/2017-03-20-epic-links</guid>
            <pubDate>Mon, 20 Mar 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[
A collection of links that I found useful, inspired me and may bring you enjoyment and/or enlightenment as well.

Disclaimer

I'm not in any way affiliated with the following links, I just find them useful, delightful, funny...

Useful Tools

https://caniuse.com
https://css-tricks.com

Favorite Developer Blogs

https://ayende.com
http://blog.ploeh.dk/
https://cuttingedge.it/blogs/steven/
https://ericlippert.com

Daily Dose

https://aeon.co
https://news.ycombinator.com/newest
https://www.reddit....]]></description>
        </item>
        <item>
            <title><![CDATA[An Elm to the Past]]></title>
            <link>http://canena.de/posts/2018-02-24-an-elm-to-the-past</link>
            <guid>http://canena.de/posts/2018-02-24-an-elm-to-the-past</guid>
            <pubDate>Sat, 24 Feb 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[
This blog post compiles the advice I posted in
a discussion on Elm Discourse
on support of Elm for older browsers and is pretty much reproduced verbatim, thanks to the power Markdown.

I've put all the information in here to good use so head to
https://github.com/mfeineis/elm-legacy-browser-setup
if you want to see some code right away. I even managed to bring support for IE8+, which I didn't expect, tbh.

Original Post Gist

"Is there an official list of supported browsers for Elm? If not, wha...]]></description>
        </item>
        <item>
            <title><![CDATA[Stack to Elm Them All]]></title>
            <link>http://canena.de/posts/2018-09-07-stack-to-elm-them-all</link>
            <guid>http://canena.de/posts/2018-09-07-stack-to-elm-them-all</guid>
            <pubDate>Fri, 07 Sep 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[
Ever wondered - or forgot - how to build the Elm Compiler with tracing using Haskell Stack? Here's how you do it

Init with stack

stack init --resolver lts-11.20

Add options in elm.cabal:

    Executable elm
        if flag(dev)
            ghc-options: -O0 -Wall -Werror -rtsopts -eventlog

Build with stack:

stack build --flag elm:dev --profile

Run with RTS options:

elm make ./src/Main.elm \
    --output=./dist/app.js +RTS -xc -lu -RTC \
    2>eventlog_readable.log

This is essentially jus...]]></description>
        </item>
        <item>
            <title><![CDATA[Alpine Elm Docker]]></title>
            <link>http://canena.de/posts/2018-09-09-alpine-elm-docker</link>
            <guid>http://canena.de/posts/2018-09-09-alpine-elm-docker</guid>
            <pubDate>Sun, 09 Sep 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[
A Dockerfile for creating a minimal alpine docker image for your CI builds I salvaged from a Slack conversation.

    FROM alpine
    RUN apk add binutils \
      && wget -qO - "https://github.com/elm/compiler/releases/download/0.19.0/binaries-for-linux.tar.gz" \
      | tar -zxC /usr/local/bin/ && strip /usr/local/bin/elm && apk del binutils

This will result in a docker image that is roughly the size of the Elm binaries we're packaging - about 40MB(!) as of the time of writing this.

    { mi...]]></description>
        </item>
        <item>
            <title><![CDATA[Elm 0.19 TL;DR]]></title>
            <link>http://canena.de/posts/2018-09-25-elm-0-19-tldr</link>
            <guid>http://canena.de/posts/2018-09-25-elm-0-19-tldr</guid>
            <pubDate>Tue, 25 Sep 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[
As the Elm 0.19 upgrade docs are lacking some vital information you only know about by consistently hanging out on the Elm Slack I thought I'd list them here for all the word to see.

Massive compile time improvements
Huge internal rework of the compiler that is prepared for the coming use-cases
Many bugfixes regarding performance - i.e. pattern matching on tuples, many case branches, unnecessary recompiles, too much IO, memory leaks
Removed many XSS attack vectors - i.e. disallowing innerHTML ...]]></description>
        </item>
        <item>
            <title><![CDATA[TypeScript vs the Real World]]></title>
            <link>http://canena.de/posts/2019-03-04-typescript-vs-the-real-world</link>
            <guid>http://canena.de/posts/2019-03-04-typescript-vs-the-real-world</guid>
            <pubDate>Mon, 04 Mar 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[
This started out as a YouTube comment on a talk about TypeScript that got out of control in scope so I created a blog post instead.

Go watch Why I Was Wrong About TypeScript.

Questions You Should Be Asking Yourself

The speaker largely highlights positive aspects of TypeScript. How many technologies do you know that have no flaws? TS obviously has a lot of benefits but here are some questions I would put up for discussion that nobody seems to talk about:

1) How accurate do you think bolted o...]]></description>
        </item>
        <item>
            <title><![CDATA[An Elmstatic Experience]]></title>
            <link>http://canena.de/posts/2019-06-05-an-elmstatic-experience</link>
            <guid>http://canena.de/posts/2019-06-05-an-elmstatic-experience</guid>
            <pubDate>Wed, 05 Jun 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[
A quick walkthrough of how I migrated this site to use Elmstatic instead of my buggy, hand-made Elm-to-static-HTML script.

Iterate, Adapt, Repeat
Originally the blog started out using plain HTML/CSS employing a rather strict BEM approach. As I got more into Elm at the time I decided it would be a fun exercise to use it to create the markup and elm-static-html-lib seemed like a good choice. And so I hacked away at a Node script that produced the desired artifacts out of an Elm/Markdown mixture;...]]></description>
        </item>
        <item>
            <title><![CDATA[Tales From the Code Crypt - Book 1, Water]]></title>
            <link>http://canena.de/posts/2019-06-08-tales-from-the-code-crypt-book1-water</link>
            <guid>http://canena.de/posts/2019-06-08-tales-from-the-code-crypt-book1-water</guid>
            <pubDate>Sat, 08 Jun 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[
I recently waded through my own code archives and rediscovered some interesting and/or formative gems I think are worth discussing. This post is the first installment of this series to showcase and evaluate what past-me-code was all about.

Efficient Water Imitation

This post presents a water imitation algorithm that employs a front-/back-buffer smoothing approach I fiddled around with probably around 2008. Full disclosure: I'm not the originator of this neat trick. Unfortunately, I'm not sure...]]></description>
        </item>
        <item>
            <title><![CDATA[A blog about life]]></title>
            <link>http://canena.de/posts/undefined-undefined</link>
            <guid>http://canena.de/posts/undefined-undefined</guid>
            <pubDate>Invalid Date</pubDate>
            <description><![CDATA[
...]]></description>
        </item>
    </channel>
</rss>